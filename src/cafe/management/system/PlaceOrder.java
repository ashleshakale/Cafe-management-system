/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package cafe.management.system;

import DataAccessObjects.*;
import com.itextpdf.text.Document;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import common.OpenPDF;
import java.io.FileOutputStream;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import model.*;

/**
 *
 * @author prati
 */
public class PlaceOrder extends javax.swing.JFrame {

    public int billId = 1;
    public int grandTotal = 0;
    public int productPrice = 0;
    public int productTotal = 0;
    public String emailPattern = "^[a-zA-Z0-9]+[@]+[a-zA-Z0-9]+[.]+[a-zA-Z0-9]+$";
    public String mobileNumberPattern = "^[0-9]*$";
    public String userEmail;
    public User user;

    /**
     * Creates new form PlaceOrder
     */
    public PlaceOrder() {
        initComponents();
        setLocationRelativeTo(null);
    }

    public PlaceOrder(User userObj) {
        initComponents();
        setLocationRelativeTo(null);
        user = userObj;
        txtProductName.setEditable(false);
        txtProductPrice.setEditable(false);
        txtProductTotal.setEditable(false);
        btnAddToCart.setEnabled(false);
        btnGenerateBillnPrint.setEnabled(false);
        JFormattedTextField tf = ((JSpinner.DefaultEditor) SpinnerProductQuantity.getEditor()).getTextField();
        tf.setEditable(false);
    }

    public PlaceOrder(String email) {
        initComponents();
        setLocationRelativeTo(null);
        txtProductName.setEditable(false);
        txtProductPrice.setEditable(false);
        txtProductTotal.setEditable(false);
        btnAddToCart.setEnabled(false);
        btnGenerateBillnPrint.setEnabled(false);
        JFormattedTextField tf = ((JSpinner.DefaultEditor) SpinnerProductQuantity.getEditor()).getTextField();
        tf.setEditable(false);
        userEmail = email;
    }

    public void productNameByCategory(String category) {
        DefaultTableModel dtm = (DefaultTableModel) tbleName.getModel();
        dtm.setRowCount(0);
        ArrayList<Product> productList = ProductDataAccessObject.getProductsByCategory(category);
        Iterator<Product> itr = productList.iterator();
        while (itr.hasNext()) {
            Product product = itr.next();
            dtm.addRow(new Object[]{product.getName()});
        }
    }

    public void filterProductByName(String name, String category) {
        DefaultTableModel dtm = (DefaultTableModel) tbleName.getModel();
        dtm.setRowCount(0);
        ArrayList<Product> productList = ProductDataAccessObject.filterProductsByName(name, category);
        Iterator<Product> itr = productList.iterator();
        while (itr.hasNext()) {
            Product product = itr.next();
            dtm.addRow(new Object[]{product.getName()});
        }
    }

    public void clearProductFields() {
        txtProductName.setText("");
        txtProductPrice.setText("");
        SpinnerProductQuantity.setValue(1);
        txtProductTotal.setText("");
        btnAddToCart.setEnabled(false);
    }

    public void validateFeilds() {
        String customerName = txtCustomerName.getText();
        String customerMobileNumber = txtCustomerMobileNumber.getText();
        String customerEmail = txtCustomerEmail.getText();
        if (!customerName.isBlank() && !customerEmail.isBlank() && customerMobileNumber.matches(mobileNumberPattern) && customerMobileNumber.length() == 10 && customerEmail.matches(emailPattern) && grandTotal > 0 && Integer.parseInt(SpinnerProductQuantity.getValue().toString()) > 0) {
            btnGenerateBillnPrint.setEnabled(true);
        } else {
            btnGenerateBillnPrint.setEnabled(false);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lblID = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtCustomerName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtCustomerMobileNumber = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtCustomerEmail = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        ComboBoxCategory = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbleName = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtProductName = new javax.swing.JTextField();
        txtProductPrice = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtProductTotal = new javax.swing.JTextField();
        SpinnerProductQuantity = new javax.swing.JSpinner();
        btnClear = new javax.swing.JButton();
        btnAddToCart = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblBill = new javax.swing.JTable();
        jLabel13 = new javax.swing.JLabel();
        lblGrandTotal = new javax.swing.JLabel();
        btnGenerateBillnPrint = new javax.swing.JButton();
        btnClose = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1360, 770));
        setMinimumSize(new java.awt.Dimension(1360, 770));
        setUndecorated(true);
        setPreferredSize(new java.awt.Dimension(1370, 770));
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/place order.png"))); // NOI18N
        jLabel1.setText("Place Order");
        jLabel1.setMaximumSize(new java.awt.Dimension(1370, 770));
        jLabel1.setMinimumSize(new java.awt.Dimension(1370, 770));
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 6, -1, -1));

        jLabel2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel2.setText("Bill ID");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 70, -1, -1));

        lblID.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblID.setText("00");
        getContentPane().add(lblID, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 70, -1, -1));

        jLabel4.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel4.setText("Customer Details:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 120, -1, -1));

        jLabel5.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel5.setText("Customer Name");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 160, -1, -1));

        txtCustomerName.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        txtCustomerName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCustomerNameKeyReleased(evt);
            }
        });
        getContentPane().add(txtCustomerName, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 190, 250, -1));

        jLabel3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel3.setText("Mobile Number");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 240, -1, -1));

        txtCustomerMobileNumber.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        txtCustomerMobileNumber.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCustomerMobileNumberKeyReleased(evt);
            }
        });
        getContentPane().add(txtCustomerMobileNumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 270, 250, -1));

        jLabel6.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel6.setText("Email");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 310, -1, -1));

        txtCustomerEmail.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        txtCustomerEmail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCustomerEmailKeyReleased(evt);
            }
        });
        getContentPane().add(txtCustomerEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 340, 250, -1));

        jLabel7.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel7.setText("Category");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 70, -1, -1));

        ComboBoxCategory.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        ComboBoxCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboBoxCategoryActionPerformed(evt);
            }
        });
        getContentPane().add(ComboBoxCategory, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 100, 250, -1));

        jLabel8.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel8.setText("Search");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 160, -1, -1));

        txtSearch.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });
        getContentPane().add(txtSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 190, 250, -1));

        tbleName.setBackground(java.awt.SystemColor.activeCaption);
        tbleName.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        tbleName.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name"
            }
        ));
        tbleName.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbleNameMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbleName);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 250, 330, 360));

        jLabel9.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel9.setText("Product Name");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 70, -1, -1));

        jLabel10.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel10.setText("Price");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(1080, 70, -1, -1));

        txtProductName.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        getContentPane().add(txtProductName, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 100, 250, -1));

        txtProductPrice.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        getContentPane().add(txtProductPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(1080, 100, 250, -1));

        jLabel11.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel11.setText("Quantity");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 160, -1, -1));

        jLabel12.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel12.setText("Total");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(1080, 160, -1, -1));

        txtProductTotal.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        getContentPane().add(txtProductTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(1080, 190, 250, -1));

        SpinnerProductQuantity.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        SpinnerProductQuantity.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                SpinnerProductQuantityStateChanged(evt);
            }
        });
        getContentPane().add(SpinnerProductQuantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 190, 250, -1));

        btnClear.setBackground(java.awt.SystemColor.activeCaption);
        btnClear.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnClear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/clear.png"))); // NOI18N
        btnClear.setText("Clear");
        btnClear.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });
        getContentPane().add(btnClear, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 240, -1, -1));

        btnAddToCart.setBackground(java.awt.SystemColor.activeCaption);
        btnAddToCart.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnAddToCart.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/add to cart.png"))); // NOI18N
        btnAddToCart.setText("Add To Cart");
        btnAddToCart.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAddToCart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddToCartActionPerformed(evt);
            }
        });
        getContentPane().add(btnAddToCart, new org.netbeans.lib.awtextra.AbsoluteConstraints(1080, 240, -1, -1));

        tblBill.setBackground(java.awt.SystemColor.activeCaption);
        tblBill.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        tblBill.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Price", "Quantity", "Total"
            }
        ));
        tblBill.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblBillMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblBill);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 310, 573, 300));

        jLabel13.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel13.setText("Grand Total Rs.");
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 635, -1, -1));

        lblGrandTotal.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblGrandTotal.setText("0000");
        getContentPane().add(lblGrandTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(893, 635, -1, -1));

        btnGenerateBillnPrint.setBackground(java.awt.SystemColor.activeCaption);
        btnGenerateBillnPrint.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnGenerateBillnPrint.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/generate bill & print.png"))); // NOI18N
        btnGenerateBillnPrint.setText("Generate Bill & Print");
        btnGenerateBillnPrint.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnGenerateBillnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerateBillnPrintActionPerformed(evt);
            }
        });
        getContentPane().add(btnGenerateBillnPrint, new org.netbeans.lib.awtextra.AbsoluteConstraints(1123, 635, 210, -1));

        btnClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/close.png"))); // NOI18N
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });
        getContentPane().add(btnClose, new org.netbeans.lib.awtextra.AbsoluteConstraints(1320, 0, 30, -1));

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1370, 770));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        // TODO add your handling code here:
        setVisible(false);
    }//GEN-LAST:event_btnCloseActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
        billId = Integer.parseInt(OrderDataAccessObject.getId());
        lblID.setText(OrderDataAccessObject.getId());
        ArrayList<Category> categoryList = CategoryDataAccessObject.getCategoryList();
        Iterator<Category> itr = categoryList.iterator();
        while (itr.hasNext()) {
            Category category = itr.next();
            ComboBoxCategory.addItem(category.getName());
        }
        String category = (String) ComboBoxCategory.getSelectedItem();
        productNameByCategory(category);
    }//GEN-LAST:event_formComponentShown

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        // TODO add your handling code here:
        String name = txtSearch.getText();
        String category = (String) ComboBoxCategory.getSelectedItem();
        filterProductByName(name, category);
    }//GEN-LAST:event_txtSearchKeyReleased

    private void tbleNameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbleNameMouseClicked
        // TODO add your handling code here:
        int index = tbleName.getSelectedRow();
        TableModel model = tbleName.getModel();
        String productName = model.getValueAt(index, 0).toString();
        Product product = ProductDataAccessObject.getProductsByName(productName);
        txtProductName.setText(product.getName());
        txtProductPrice.setText(product.getPrice());
        SpinnerProductQuantity.setValue(1);
        txtProductTotal.setText(product.getPrice());
        productPrice = Integer.parseInt(product.getPrice());
        productTotal = Integer.parseInt(product.getPrice());
        btnAddToCart.setEnabled(true);
    }//GEN-LAST:event_tbleNameMouseClicked

    private void SpinnerProductQuantityStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_SpinnerProductQuantityStateChanged
        // TODO add your handling code here:
        int quantity = (Integer) SpinnerProductQuantity.getValue();
        if (quantity <= 1) {
            SpinnerProductQuantity.setValue(1);
            quantity = 1;
        }
        productTotal = productPrice * quantity;
        txtProductTotal.setText(String.valueOf(productTotal));
    }//GEN-LAST:event_SpinnerProductQuantityStateChanged

    private void ComboBoxCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboBoxCategoryActionPerformed
        // TODO add your handling code here:
        String category = (String) ComboBoxCategory.getSelectedItem();
        productNameByCategory(category);
    }//GEN-LAST:event_ComboBoxCategoryActionPerformed

    private void btnAddToCartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddToCartActionPerformed
        // TODO add your handling code here:
        String name = txtProductName.getText();
        String price = txtProductPrice.getText();
        String quantity = String.valueOf(SpinnerProductQuantity.getValue());
        DefaultTableModel dtm = (DefaultTableModel) tblBill.getModel();
        dtm.addRow(new Object[]{name, price, quantity, productTotal});
        grandTotal += productTotal;
        lblGrandTotal.setText(String.valueOf(grandTotal));
        clearProductFields();
        validateFeilds();
    }//GEN-LAST:event_btnAddToCartActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
        clearProductFields();
    }//GEN-LAST:event_btnClearActionPerformed

    private void txtCustomerNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCustomerNameKeyReleased
        // TODO add your handling code here:
        validateFeilds();
    }//GEN-LAST:event_txtCustomerNameKeyReleased

    private void txtCustomerMobileNumberKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCustomerMobileNumberKeyReleased
        // TODO add your handling code here:
        validateFeilds();
    }//GEN-LAST:event_txtCustomerMobileNumberKeyReleased

    private void txtCustomerEmailKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCustomerEmailKeyReleased
        // TODO add your handling code here:
        validateFeilds();
    }//GEN-LAST:event_txtCustomerEmailKeyReleased

    private void btnGenerateBillnPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerateBillnPrintActionPerformed
        // TODO add your handling code here:
        String customerName = txtCustomerName.getText();
        String customerMobileNumber = txtCustomerMobileNumber.getText();
        String customerEmail = txtCustomerEmail.getText();
        SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
        Date date = new Date();
        String todayDate = sdf.format(date);
        String total = String.valueOf(grandTotal);
        String createdBy = user.getEmail();
        Order bill = new Order();
        bill.setId(billId);
        bill.setName(customerName);
        bill.setMobileNumber(customerMobileNumber);
        bill.setEmail(customerEmail);
        bill.setDate(todayDate);
        bill.setTotal(total);
        bill.setCreatedBy(createdBy);
        OrderDataAccessObject.saveBill(bill);

        //Creating document
        com.itextpdf.text.Document document = new com.itextpdf.text.Document();
        try {
            PdfWriter.getInstance(document, new FileOutputStream("D:\\Bill"+ billId + ".pdf"));
            document.open();
            Paragraph cafeName = new Paragraph("                                                                Taj Mahal Cafe\n");
            document.add(cafeName);
            Paragraph starLine = new Paragraph("****************************************************************************************************************");
            document.add(starLine);
            Paragraph paragraph3 = new Paragraph("\tBill ID: " + billId + "\nCustomer Name: " + customerName + "\nTotal Paid: " + grandTotal);
            document.add(paragraph3);
            document.add(starLine);
            PdfPTable table1 = new PdfPTable(4);
            table1.addCell("Name");
            table1.addCell("Price");
            table1.addCell("Quantity");
            table1.addCell("Total");
            for (int i = 0; i < tblBill.getRowCount(); i++) {
                String n = tblBill.getValueAt(i, 0).toString();
                String d = tblBill.getValueAt(i, 1).toString();
                String r = tblBill.getValueAt(i, 2).toString();
                String q = tblBill.getValueAt(i, 3).toString();
                table1.addCell(n);
                table1.addCell(d);
                table1.addCell(r);
                table1.addCell(q);
            }
            document.add(table1);
            document.add(starLine);
            Paragraph thanksMsg = new Paragraph("Thank you, Please visit again.");
            document.add(thanksMsg);
            //Open pdf
            OpenPDF.openById(String.valueOf(billId));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
        document.close();
        setVisible(false);
        new PlaceOrder(user).setVisible(true);
    }//GEN-LAST:event_btnGenerateBillnPrintActionPerformed

    private void tblBillMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblBillMouseClicked
        // TODO add your handling code here:
        int index = tblBill.getSelectedRow();
        int a = JOptionPane.showConfirmDialog(null, "Do you want to remove this product?", "Confirm", JOptionPane.YES_NO_OPTION);
        if (a == 0) {
            TableModel model = tblBill.getModel();
            String total = model.getValueAt(index, 3).toString();
            grandTotal -= Integer.parseInt(total);
            lblGrandTotal.setText(String.valueOf(grandTotal));
            ((DefaultTableModel) tblBill.getModel()).removeRow(index);
        }
    }//GEN-LAST:event_tblBillMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PlaceOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PlaceOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PlaceOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PlaceOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PlaceOrder().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> ComboBoxCategory;
    private javax.swing.JSpinner SpinnerProductQuantity;
    private javax.swing.JButton btnAddToCart;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnGenerateBillnPrint;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblGrandTotal;
    private javax.swing.JLabel lblID;
    private javax.swing.JTable tblBill;
    private javax.swing.JTable tbleName;
    private javax.swing.JTextField txtCustomerEmail;
    private javax.swing.JTextField txtCustomerMobileNumber;
    private javax.swing.JTextField txtCustomerName;
    private javax.swing.JTextField txtProductName;
    private javax.swing.JTextField txtProductPrice;
    private javax.swing.JTextField txtProductTotal;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
